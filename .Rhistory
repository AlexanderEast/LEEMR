date   <- Sys.time()
year   <- substr(date,1,4)
month  <- substr(date,6,7)
day    <- substr(date,9,10)
hour   <- as.numeric(substr(date,12,13))
minute <- substr(date,15,16)
if (hour > 12){
hour <- as.character(hour-12)
minute <- paste0(minute,"PM")
} else {
minute <- paste0(minute,"AM")
}
filename <- paste0(name," ",hour,minute," ",month," ",day," ",year)
return(filename)
}
time  <- namer('Run Date:')
description <- t(data.frame(Info =time,
n,
WGM = wgm,
WGSD= wgsd,
Weight = wt,
Seed = seed))
#7. Create export list
results<-list(description,summary,Exposure,Concentration)
names(results)<- c("Description","Summary Statistics","Exposure","Concentration")
return(results)
}
library('rio')
library('dplyr')
data<- import('PFOA Water Example.xlsx')
LEM(data,'Sample Size',5,"ng/L",200,12345)
LEM <- function(df,wt,expf,expunits, n, seed){
#1. Units
#data<- df
data<- data %>% dplyr::mutate(UNITFACTOR = case_when(
(Units %in% c("ng/m³","ng/L","ng/g","µg/kg","ug/kg","pg/mL","pg/ml")) ~ 1,
(Units %in% c("pg/m³","pg/g")) ~ 0.001,
(Units %in% c("ng/mL","ug/l","µg/L","ug/m³","µg/m³")) ~ 1000)) %>%
mutate_at(c("Min","Max","Median","Mean","SD","GM","GSD","P10","P25","P75","P90","P95","P99"),~.*UNITFACTOR) %>%
mutate(Units = case_when(
(Units %in% c("ug/m3","µg/m³","pg/m³","ng/m³")) ~ "ng/m³",
(Units %in% c("ng/mL","ug/l","ug/L","µg/l","µg/L","pg/ml","pg/mL","ng/L")) ~ "ng/L",
(Units %in% c("pg/g","µg/kg","ug/kg","ng/g")) ~ "ng/g")) %>%
select(-UNITFACTOR)
#2. GM/GSD Estimator
# A. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# B. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# C. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# D. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# E. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
# F. Estimate Mean and SD using "Estimating.datalsdata" Methods (5) and (16). Mean calculated from min, median, Maximum,
# and SD from minimum, median, Maximum, and range.
data <- data %>% mutate(Mean = if_else(!is.na(Mean),Mean, (Min+2*Median+Max)/4))
data <- data %>% mutate(SD = if_else(!is.na(SD),SD, sqrt ((1/12) * ((Min-2*Median+Max)^2)/4 + (Max-Min)^2)))
# G. Estimate SD using Ramirez & Codata Method and range rule. Applied only if sample size  > 10.
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/ (3*sqrt(log(`Sample Size`))-1.5)))
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/4))
# ______________________________ Repeat A - E. ______________________________ #
# H. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# I. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# J. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# K. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# L. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
#3. WGM and WGSD
wgm  <- weighted.mean(data$GM[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
wgsd <- weighted.mean(data$GSD[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
#4. Generate exposure and concentration curves
set.seed(12345)
Concentration<- rlnorm(n,wgm,wgsd)
Exposure     <- rlnorm(n,wgm,wgsd)*expf
Concentration <- data.frame(Concentration)
Concentration$Units <- names(table(data$Units))
Exposure <- data.frame(Exposure)
Exposure$Units <- expunits
#5. Summarize output
sumstats<- function(x){
sumstats <- t(quantile(x,c(0,.10,.5,.75,.95,1)))
mymean   <- mean(x)
sumstats <- cbind(mymean,sumstats)
colnames(sumstats)<-c("Mean","Min","10th%","Median","75th%","95th","Max")
sumstats<- signif(sumstats,5)
return(sumstats)
}
summary <- rbind(sumstats(Concentration),sumstats(Exposure))
summary <- cbind(c("Concentration", "Exposure"),summary)
colnames(summary)[1] <- "Result"
#6. Add metadata to Output
namer <- function(name){
date   <- Sys.time()
year   <- substr(date,1,4)
month  <- substr(date,6,7)
day    <- substr(date,9,10)
hour   <- as.numeric(substr(date,12,13))
minute <- substr(date,15,16)
if (hour > 12){
hour <- as.character(hour-12)
minute <- paste0(minute,"PM")
} else {
minute <- paste0(minute,"AM")
}
filename <- paste0(name," ",hour,minute," ",month," ",day," ",year)
return(filename)
}
time  <- namer('Run Date:')
description <- t(data.frame(Info =time,
n,
WGM = wgm,
WGSD= wgsd,
Weight = wt,
Seed = seed))
#7. Create export list
results<-list(description,summary,Exposure,Concentration)
names(results)<- c("Description","Summary Statistics","Exposure","Concentration")
return(results)
}
library('rio')
library('dplyr')
data<- import('PFOA Water Example.xlsx')
LEM(data,'Sample Size',5,"ng/L",200,12345)
name = "ng/L"
expf = 5
expunits = "ng/L"
n = 500
seed = 12345
#1. Units
#data<- df
data<- data %>% dplyr::mutate(UNITFACTOR = case_when(
(Units %in% c("ng/m³","ng/L","ng/g","µg/kg","ug/kg","pg/mL","pg/ml")) ~ 1,
(Units %in% c("pg/m³","pg/g")) ~ 0.001,
(Units %in% c("ng/mL","ug/l","µg/L","ug/m³","µg/m³")) ~ 1000)) %>%
mutate_at(c("Min","Max","Median","Mean","SD","GM","GSD","P10","P25","P75","P90","P95","P99"),~.*UNITFACTOR) %>%
mutate(Units = case_when(
(Units %in% c("ug/m3","µg/m³","pg/m³","ng/m³")) ~ "ng/m³",
(Units %in% c("ng/mL","ug/l","ug/L","µg/l","µg/L","pg/ml","pg/mL","ng/L")) ~ "ng/L",
(Units %in% c("pg/g","µg/kg","ug/kg","ng/g")) ~ "ng/g")) %>%
select(-UNITFACTOR)
#2. GM/GSD Estimator
# A. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# B. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# C. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# D. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# E. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
data <- data %>% mutate(Mean = if_else(!is.na(Mean),Mean, (Min+2*Median+Max)/4))
data <- data %>% mutate(SD = if_else(!is.na(SD),SD, sqrt ((1/12) * ((Min-2*Median+Max)^2)/4 + (Max-Min)^2)))
# G. Estimate SD using Ramirez & Codata Method and range rule. Applied only if sample size  > 10.
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/ (3*sqrt(log(`Sample Size`))-1.5)))
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/4))
# H. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# I. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# J. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# K. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# L. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
#3. WGM and WGSD
wgm  <- weighted.mean(data$GM[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
wt= 'Sample Size'
#3. WGM and WGSD
wgm  <- weighted.mean(data$GM[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
wgsd <- weighted.mean(data$GSD[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
#4. Generate exposure and concentration curves
set.seed(12345)
#4. Generate exposure and concentration curves
set.seed(seed)
Concentration<- rlnorm(n,wgm,wgsd)
Exposure     <- rlnorm(n,wgm,wgsd)*expf
Concentration <- data.frame(Concentration)
Concentration$Units <- names(table(data$Units))
Exposure <- data.frame(Exposure)
Exposure$Units <- expunits
#5. Summarize output
sumstats<- function(x){
sumstats <- t(quantile(x,c(0,.10,.5,.75,.95,1)))
mymean   <- mean(x)
sumstats <- cbind(mymean,sumstats)
colnames(sumstats)<-c("Mean","Min","10th%","Median","75th%","95th","Max")
sumstats<- signif(sumstats,5)
return(sumstats)
}
summary <- rbind(sumstats(Concentration),sumstats(Exposure))
sumstats(Concentration)
View(Concentration)
View(Concentration)
sumstats(Concentration[1])
Concentration[1]
sumstats(Concentration[1])
sumstats(Concentration$Concentration)
summary <- rbind(sumstats(Concentration$Concentration),sumstats(Exposure$Exposure))
summary <- cbind(c("Concentration", "Exposure"),summary)
colnames(summary)[1] <- "Result"
summary <- rbind(sumstats(Concentration$Concentration),sumstats(Exposure$Exposure))
summary <- rbind(sumstats(Concentration$Concentration),sumstats(Exposure$Exposure))
summary <- cbind(c("Concentration", "Exposure"),summary)
colnames(summary)[1] <- "Result"
#6. Add metadata to Output
namer <- function(name){
date   <- Sys.time()
year   <- substr(date,1,4)
month  <- substr(date,6,7)
day    <- substr(date,9,10)
hour   <- as.numeric(substr(date,12,13))
minute <- substr(date,15,16)
if (hour > 12){
hour <- as.character(hour-12)
minute <- paste0(minute,"PM")
} else {
minute <- paste0(minute,"AM")
}
filename <- paste0(name," ",hour,minute," ",month," ",day," ",year)
return(filename)
}
time  <- namer('Run Date:')
description <- t(data.frame(Info =time,
n,
WGM = wgm,
WGSD= wgsd,
Weight = wt,
Seed = seed))
#7. Create export list
results<-list(description,summary,Exposure,Concentration)
names(results)<- c("Description","Summary Statistics","Exposure","Concentration")
rm(list=ls())
LEM <- function(df,wt,expf,expunits, n, seed){
#1. Units
#data<- df
data<- data %>% dplyr::mutate(UNITFACTOR = case_when(
(Units %in% c("ng/m³","ng/L","ng/g","µg/kg","ug/kg","pg/mL","pg/ml")) ~ 1,
(Units %in% c("pg/m³","pg/g")) ~ 0.001,
(Units %in% c("ng/mL","ug/l","µg/L","ug/m³","µg/m³")) ~ 1000)) %>%
mutate_at(c("Min","Max","Median","Mean","SD","GM","GSD","P10","P25","P75","P90","P95","P99"),~.*UNITFACTOR) %>%
mutate(Units = case_when(
(Units %in% c("ug/m3","µg/m³","pg/m³","ng/m³")) ~ "ng/m³",
(Units %in% c("ng/mL","ug/l","ug/L","µg/l","µg/L","pg/ml","pg/mL","ng/L")) ~ "ng/L",
(Units %in% c("pg/g","µg/kg","ug/kg","ng/g")) ~ "ng/g")) %>%
select(-UNITFACTOR)
#2. GM/GSD Estimator
# A. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# B. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# C. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# D. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# E. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
# F. Estimate Mean and SD using "Estimating.datalsdata" Methods (5) and (16). Mean calculated from min, median, Maximum,
# and SD from minimum, median, Maximum, and range.
data <- data %>% mutate(Mean = if_else(!is.na(Mean),Mean, (Min+2*Median+Max)/4))
data <- data %>% mutate(SD = if_else(!is.na(SD),SD, sqrt ((1/12) * ((Min-2*Median+Max)^2)/4 + (Max-Min)^2)))
# G. Estimate SD using Ramirez & Codata Method and range rule. Applied only if sample size  > 10.
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/ (3*sqrt(log(`Sample Size`))-1.5)))
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/4))
# ______________________________ Repeat A - E. ______________________________ #
# H. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# I. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# J. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# K. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# L. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
#3. WGM and WGSD
wgm  <- weighted.mean(data$GM[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
wgsd <- weighted.mean(data$GSD[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
#4. Generate exposure and concentration curves
set.seed(seed)
Concentration<- rlnorm(n,wgm,wgsd)
Exposure     <- rlnorm(n,wgm,wgsd)*expf
Concentration <- data.frame(Concentration)
Concentration$Units <- names(table(data$Units))
Exposure <- data.frame(Exposure)
Exposure$Units <- expunits
#5. Summarize output
sumstats<- function(x){
sumstats <- t(quantile(x,c(0,.10,.5,.75,.95,1)))
mymean   <- mean(x)
sumstats <- cbind(mymean,sumstats)
colnames(sumstats)<-c("Mean","Min","10th%","Median","75th%","95th","Max")
sumstats<- signif(sumstats,5)
return(sumstats)
}
summary <- rbind(sumstats(Concentration$Concentration),sumstats(Exposure$Exposure))
summary <- cbind(c("Concentration", "Exposure"),summary)
colnames(summary)[1] <- "Result"
#6. Add metadata to Output
namer <- function(name){
date   <- Sys.time()
year   <- substr(date,1,4)
month  <- substr(date,6,7)
day    <- substr(date,9,10)
hour   <- as.numeric(substr(date,12,13))
minute <- substr(date,15,16)
if (hour > 12){
hour <- as.character(hour-12)
minute <- paste0(minute,"PM")
} else {
minute <- paste0(minute,"AM")
}
filename <- paste0(name," ",hour,minute," ",month," ",day," ",year)
return(filename)
}
time  <- namer('Run Date:')
description <- t(data.frame(Info =time,
n,
WGM = wgm,
WGSD= wgsd,
Weight = wt,
Seed = seed))
#7. Create export list
results<-list(description,summary,Exposure,Concentration)
names(results)<- c("Description","Summary Statistics","Exposure","Concentration")
return(results)
}
data<- import('PFOA Water Example.xlsx')
LEM(data,'Sample Size',5,"ng/L",200,12345)
?set.seed
#4. Generate exposure and concentration curves
set.seed(seed = 12345)
#4. Generate exposure and concentration curves
set.seed(seed = seed)
#4. Generate exposure and concentration curves
set.seed(seed = seed)
myseed = 12345
#4. Generate exposure and concentration curves
set.seed(seed = seed)
#4. Generate exposure and concentration curves
set.seed(seed = myseed)
library('rio')
library('dplyr')
data<- import('PFOA Water Example.xlsx')
LEM(data,'Sample Size',5,"ng/L",200,12345)
LEM <- function(df, wt, expf, expunits, n, myseed){
#1. Units
#data<- df
data<- data %>% dplyr::mutate(UNITFACTOR = case_when(
(Units %in% c("ng/m³","ng/L","ng/g","µg/kg","ug/kg","pg/mL","pg/ml")) ~ 1,
(Units %in% c("pg/m³","pg/g")) ~ 0.001,
(Units %in% c("ng/mL","ug/l","µg/L","ug/m³","µg/m³")) ~ 1000)) %>%
mutate_at(c("Min","Max","Median","Mean","SD","GM","GSD","P10","P25","P75","P90","P95","P99"),~.*UNITFACTOR) %>%
mutate(Units = case_when(
(Units %in% c("ug/m3","µg/m³","pg/m³","ng/m³")) ~ "ng/m³",
(Units %in% c("ng/mL","ug/l","ug/L","µg/l","µg/L","pg/ml","pg/mL","ng/L")) ~ "ng/L",
(Units %in% c("pg/g","µg/kg","ug/kg","ng/g")) ~ "ng/g")) %>%
select(-UNITFACTOR)
#2. GM/GSD Estimator
# A. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# B. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# C. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# D. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# E. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
# F. Estimate Mean and SD using "Estimating.datalsdata" Methods (5) and (16). Mean calculated from min, median, Maximum,
# and SD from minimum, median, Maximum, and range.
data <- data %>% mutate(Mean = if_else(!is.na(Mean),Mean, (Min+2*Median+Max)/4))
data <- data %>% mutate(SD = if_else(!is.na(SD),SD, sqrt ((1/12) * ((Min-2*Median+Max)^2)/4 + (Max-Min)^2)))
# G. Estimate SD using Ramirez & Codata Method and range rule. Applied only if sample size  > 10.
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/ (3*sqrt(log(`Sample Size`))-1.5)))
data <- data %>% mutate(SD = if_else((!is.na(SD) & `Sample Size` > 10),SD, (Max-Min)/4))
# ______________________________ Repeat A - E. ______________________________ #
# H. Estimate GM using Pleil 1.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Median))
# I. Estimate GM using Pleil 2.
data <- data %>% mutate(GM = if_else(!is.na(GM),GM , Mean/(1+0.5 *(SD/Mean)^2)))
# J. Estimate GSD using Pleil 1.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P10/GM)/qnorm(.10)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P25/GM)/qnorm(.25)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P75/GM)/qnorm(.75)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P90/GM)/qnorm(.90)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P95/GM)/qnorm(.95)))) %>%
mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(P99/GM)/qnorm(.99))))
# K. Estimate GSD using Pleil 2.
data <- suppressWarnings(data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(sqrt(2 * log(Mean/GM))))))
# L. Estimate GM using Pleil 3.
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Max/GM)/qnorm(1-1/`Sample Size`))))
data <- data %>% mutate(GSD = if_else(!is.na(GSD),GSD ,exp(log(Min/GM)/qnorm(1/`Sample Size`))))
#3. WGM and WGSD
wgm  <- weighted.mean(data$GM[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
wgsd <- weighted.mean(data$GSD[complete.cases(data$GSD,data$GM)],
data[,wt][complete.cases(data$GSD,data$GM)])
#4. Generate exposure and concentration curves
set.seed(seed = myseed)
Concentration<- rlnorm(n,wgm,wgsd)
Exposure     <- rlnorm(n,wgm,wgsd)*expf
Concentration <- data.frame(Concentration)
Concentration$Units <- names(table(data$Units))
Exposure <- data.frame(Exposure)
Exposure$Units <- expunits
#5. Summarize output
sumstats<- function(x){
sumstats <- t(quantile(x,c(0,.10,.5,.75,.95,1)))
mymean   <- mean(x)
sumstats <- cbind(mymean,sumstats)
colnames(sumstats)<-c("Mean","Min","10th%","Median","75th%","95th","Max")
sumstats<- signif(sumstats,5)
return(sumstats)
}
summary <- rbind(sumstats(Concentration$Concentration),sumstats(Exposure$Exposure))
summary <- cbind(c("Concentration", "Exposure"),summary)
colnames(summary)[1] <- "Result"
#6. Add metadata to Output
namer <- function(name){
date   <- Sys.time()
year   <- substr(date,1,4)
month  <- substr(date,6,7)
day    <- substr(date,9,10)
hour   <- as.numeric(substr(date,12,13))
minute <- substr(date,15,16)
if (hour > 12){
hour <- as.character(hour-12)
minute <- paste0(minute,"PM")
} else {
minute <- paste0(minute,"AM")
}
filename <- paste0(name," ",hour,minute," ",month," ",day," ",year)
return(filename)
}
time  <- namer('Run Date:')
description <- t(data.frame(Info =time,
n,
WGM = wgm,
WGSD= wgsd,
Weight = wt,
Seed = myseed))
#7. Create export list
results<-list(description,summary,Exposure,Concentration,data)
names(results)<- c("Description","Summary Statistics","Exposure","Concentration","Data")
return(results)
}
library('rio')
library('dplyr')
data<- import('PFOA Water Example.xlsx')
LEM(data,'Sample Size',5,"ng/L",200,12345)
see <- LEM(data,'Sample Size',5,"ng/L",200,12345)
View(see)
View(see)
see$`Summary Statistics`
see$Description
